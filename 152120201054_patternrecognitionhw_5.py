# -*- coding: utf-8 -*-
"""152120201054_PatternRecognitionHW_5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1K8wHOXoDiKjiWK24fCaj5HZDKoWIV7EY
"""

!pip install kaggle
from google.colab import files
files.upload()
# we have to uplooad "kaggle.json" file from kaggle

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

!kaggle kernels output shivamburnwal/speech-emotion-recognition -p data

!kaggle datasets download -d uwrfkaggler/ravdess-emotional-speech-audio -p data

!unzip -q data/ravdess-emotional-speech-audio.zip -d data/

import os
os.listdir("data")

!unzip -q data/ravdess-emotional-speech-audio.zip -d data/ravdess

import os
os.listdir("data/ravdess")

"""FUTURE EXTRACTION"""

X, y = [], []

for folder in os.listdir(data_path):
    folder_path = os.path.join(data_path, folder)
    if os.path.isdir(folder_path):
        for file in tqdm(os.listdir(folder_path)):
            if file.endswith(".wav"):
                emotion_code = file.split("-")[2]
                if emotion_code in emotion_labels:
                    emotion = emotion_labels[emotion_code]
                    feature_vector = extract_features(os.path.join(folder_path, file))
                    X.append(feature_vector)
                    y.append(emotion)

"""TRAIN and TEST SPLITTING"""

from sklearn.model_selection import train_test_split

X = np.array(X)
y = np.array(y)

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, stratify=y, random_state=42
)

"""RANDOM FOREST TRAIN"""

from sklearn.ensemble import RandomForestClassifier

clf = RandomForestClassifier(n_estimators=100, max_depth=25, random_state=42)
clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

"""ACCURACY CALCULATION"""

from sklearn.metrics import accuracy_score

acc = accuracy_score(y_test, y_pred)
print("Doğruluk (Accuracy): {:.2f}%".format(acc * 100))

"""CONFUSION MATRIX PLOT"""

from sklearn.metrics import confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns

labels = sorted(list(set(y)))

cm = confusion_matrix(y_test, y_pred, labels=labels)

plt.figure(figsize=(10, 8))
sns.heatmap(cm, annot=True, fmt='d', xticklabels=labels, yticklabels=labels, cmap="Blues")
plt.xlabel("Predicted Label")
plt.ylabel("Real Label")
plt.title("Confusion Matrix")
plt.savefig("confusion_matrix.png")
plt.show()

"""ANOTHER MODEL ACCURACY CALCULATION"""

from sklearn.svm import SVC

svm = SVC(kernel='rbf', C=1, gamma='scale')
svm.fit(X_train, y_train)
svm_pred = svm.predict(X_test)

svm_acc = accuracy_score(y_test, svm_pred)
print("SVM Doğruluk (Accuracy): {:.2f}%".format(svm_acc * 100))